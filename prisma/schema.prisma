// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_STRING")
}

model User {
  id      Int      @id @default(autoincrement())
  username    String @unique
  password    String
  files       File[]
}

model File {
  id            Int      @id @default(autoincrement())
  originalName  String
  storagePath   String?
  isFolder  Boolean  @default(false)
  size          BigInt?
  mimeType      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade) // Cascade delete: if user is deleted, their files are too.

  parentId  Int?  // Foreign key to the parent folder (null for root items)
  parent    File?    @relation("FolderHierarchy", fields: [parentId], references: [id], onDelete: Cascade) // Relation to the parent folder. Cascade delete: deleting
  children  File[]   @relation("FolderHierarchy") // Relation to the children of this folder

  @@unique([userId, parentId, originalName])

  @@index([userId])
  @@index([parentId])
  @@index([userId, parentId])
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   
  expiresAt   DateTime
}